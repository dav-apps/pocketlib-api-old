{
	"type": "schema",
	"schema": {
		"Publisher": {
			"properties": {
				"name": {
					"type": "String",
					"description": "The name of the publisher",
					"required": true,
					"minLength": 2,
					"maxLength": 100
				},
				"description": {
					"type": "String",
					"description": "The description for the publisher",
					"maxLength": 5700
				},
				"website_url": {
					"type": "String",
					"description": "URL to the website of the publisher",
					"validator": "website_url_validator"
				},
				"facebook_username": {
					"type": "String",
					"description": "URL to the Facebook profile or Facebook username of the publisher",
					"validator": "facebook_username_validator",
					"preprocessor": "facebook_username_preprocessor"
				},
				"instagram_username": {
					"type": "String",
					"description": "URL to the Instagram profile or Instagram username of the publisher",
					"validator": "instagram_username_validator",
					"preprocessor": "instagram_username_preprocessor"
				},
				"twitter_username": {
					"type": "String",
					"description": "URL to the Twitter profile or Twitter username of the publisher",
					"validator": "twitter_username_validator",
					"preprocessor": "twitter_username_preprocessor"
				},
				"logo": {
					"type": "PublisherLogo"
				},
				"authors": {
					"type": "Author",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "If the user is an admin, creates a new publisher for the admin. Otherwise creates a publisher for the user.",
					"authenticated": true,
					"state": "create_publisher_state",
					"validators": ["user_is_not_publisher_validator"]
				},
				"retrieve": {
					"description": "Retrieves the publisher with the given uuid. If uuid = 'mine', returns the publisher of the user.",
					"authenticated": {
						"value": "uuid_mine_check",
						"description": "If uuid = 'mine'"
					},
					"validators": [
						"user_is_not_admin_validator",
						"user_is_publisher_validator"
					],
					"getter": "publisher_getter"
				},
				"list": {
					"description": "Retrieves the publishers with the given params.",
					"state": "list_publishers_state",
					"queryParams": {
						"mine": {
							"type": "Boolean",
							"description": "If true and the user is an admin, returns the publishers of the admin",
							"default": false
						}
					},
					"authenticated": {
						"value": "mine_check",
						"description": "If mine = true"
					},
					"validators": ["user_is_admin_validator"],
					"selector": "publishers_selector"
				},
				"update": {
					"description": "Updates the publisher with the given uuid and returns it. If uuid = 'mine', updates the publisher of the user.",
					"authenticated": true,
					"validators": ["user_is_not_admin_if_uuid_mine_validator"],
					"getter": "publisher_getter"
				}
			}
		},
		"PublisherLogo": {
			"parent": {
				"type": "Publisher",
				"getter": "publisher_getter"
			},
			"properties": {
				"url": {
					"type": "String",
					"getter": "url_getter"
				},
				"blurhash": {
					"type": "String",
					"preprocessor": "blurhash_preprocessor"
				}
			},
			"endpoints": {
				"retrieve": {
					"description": "Retrieves the publisher logo metadata. If uuid = 'mine', retrieves the logo metadata of the publisher of the current user.",
					"url": "publishers/:uuid/logo",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the publisher"
						}
					},
					"authenticated": {
						"value": "uuid_mine_check",
						"description": "If uuid = 'mine'"
					},
					"validators": ["user_is_not_admin_if_uuid_mine_validator"],
					"getter": "publisher_logo_getter"
				},
				"upload": {
					"description": "Uploads a logo for the given publisher. If uuid = 'mine', sets the logo for the publisher of the current user.",
					"url": "publishers/:uuid/logo",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the publisher"
						}
					},
					"contentTypes": ["image/png", "image/jpeg"],
					"validators": ["user_is_not_admin_if_uuid_mine_validator"]
				}
			}
		},
		"Author": {
			"parent": {
				"type": "Publisher",
				"getter": "author_publisher_getter"
			},
			"properties": {
				"publisher": {
					"type": "Publisher",
					"setter": "author_publisher_setter"
				},
				"first_name": {
					"type": "String",
					"description": "The first name of the author",
					"required": true,
					"minLength": 2,
					"maxLength": 20
				},
				"last_name": {
					"type": "String",
					"description": "The last name of the author",
					"required": true,
					"minLength": 2,
					"maxLength": 20
				},
				"bio": {
					"type": "AuthorBio",
					"getter": "author_bio_getter"
				},
				"website_url": {
					"type": "String",
					"description": "URL to the website of the author",
					"validator": "website_url_validator"
				},
				"facebook_username": {
					"type": "String",
					"description": "URL to the Facebook profile or Facebook username of the author",
					"validator": "facebook_username_validator",
					"preprocessor": "facebook_username_preprocessor"
				},
				"instagram_username": {
					"type": "String",
					"description": "URL to the Instagram profile or Instagram username of the author",
					"validator": "instagram_username_validator",
					"preprocessor": "instagram_username_preprocessor"
				},
				"twitter_username": {
					"type": "String",
					"description": "URL to the Twitter profile or Twitter username of the author",
					"validator": "twitter_username_validator",
					"preprocessor": "twitter_username_preprocessor"
				},
				"profile_image": {
					"type": "AuthorProfileImage"
				},
				"bios": {
					"type": "AuthorBio",
					"relationship": "multiple"
				},
				"collections": {
					"type": "StoreBookCollection",
					"relationship": "multiple"
				},
				"series": {
					"type": "StoreBookSeries",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "If the user is an admin, creates a new author for the admin. Otherwise creates an author for the user.",
					"bodyParams": {
						"publisher": {
							"type": "String",
							"description": "The uuid of the publisher for which to create the author. Only used for admins.",
							"setter": "author_publisher_setter"
						}
					},
					"state": "create_author_state",
					"validators": [
						"user_is_not_author_validator",
						"create_author_publisher_validator"
					]
				},
				"retrieve": {
					"description": "Retrieves the author with the given uuid. If uuid = 'mine', returns the author of the user.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						}
					},
					"authenticated": {
						"value": "uuid_mine_check",
						"description": "If uuid = 'mine'"
					},
					"state": "retrieve_author_state",
					"validators": ["user_is_not_admin_if_uuid_mine_validator"],
					"getter": "author_getter"
				},
				"list": {
					"description": "Retrieves the authors with the given params.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						},
						"latest": {
							"type": "Boolean",
							"description": "If true, returns the authors of the collection 'latest_authors' which have a profile image",
							"default": true
						},
						"mine": {
							"type": "Boolean",
							"description": "If true and the user is an admin, returns the authors of the admin",
							"default": false
						},
						"publisher": {
							"type": "String",
							"description": "The uuid of the publisher of which to retrieve the authors. If the publisher belongs to the user, returns all authors, otherwise returns only the authors with a profile image"
						}
					},
					"authenticated": {
						"value": "mine_check",
						"description": "If mine = true"
					}
				},
				"update": {
					"description": "Updates the author with the given uuid and returns it. If uuid = 'mine', updates the author of the user.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						}
					}
				}
			}
		},
		"AuthorBio": {
			"properties": {
				"bio": {
					"type": "String",
					"description": "The bio of the author in the specified language",
					"required": true,
					"maxLength": 2000
				},
				"language": {
					"type": "String",
					"description": "The language of the bio",
					"required": true,
					"validator": "language_validator"
				}
			},
			"endpoints": {
				"list": {
					"description": "Retrieves the bios of the author. If uuid = 'mine', retrieves the bios of the author of the current user.",
					"url": "authors/:uuid/bios",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the author"
						}
					},
					"authenticated": {
						"value": "uuid_mine_check",
						"description": "If uuid = 'mine'"
					}
				},
				"set": {
					"description": "Sets the bio for the given author in the given language. If uuid = 'mine', sets the bio for the author of the current user.",
					"url": "authors/:uuid/bios/:language",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the author"
						},
						"language": {
							"type": "String",
							"description": "The language of the bio"
						}
					},
					"authenticated": true
				}
			}
		},
		"AuthorProfileImage": {
			"properties": {
				"url": {
					"type": "String",
					"getter": "url_getter"
				},
				"blurhash": {
					"type": "String"
				}
			},
			"endpoints": {
				"retrieve": {
					"description": "Retrieves the author profile image metadata. If uuid = 'mine', retrieves the profile image metadata of the author of the current user.",
					"url": "authors/:uuid/profile_image",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the author"
						}
					}
				},
				"upload": {
					"description": "Uploads a profile image for the given author. If uuid = 'mine', sets the profile image for the author of the current user.",
					"url": "authors/:uuid/profile_image",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the author"
						}
					},
					"contentTypes": ["image/png", "image/jpeg"]
				}
			}
		},
		"StoreBookCollection": {
			"properties": {
				"author": {
					"type": "Author"
				},
				"name": {
					"type": "StoreBookCollectionName",
					"getter": "store_book_collection_name_getter"
				},
				"names": {
					"type": "StoreBookCollectionName",
					"relationship": "multiple"
				},
				"books": {
					"type": "StoreBook",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "Creates a new store book collection.",
					"bodyParams": {
						"author": {
							"type": "String",
							"description": "The author of the store book collection",
							"setter": "store_book_collection_author_setter",
							"required": {
								"value": "user_admin_check",
								"description": "If user is admin"
							}
						},
						"name": {
							"type": "String",
							"description": "The name for the store book collection in the given language",
							"required": true
						},
						"language": {
							"type": "String",
							"description": "The language of the given name",
							"required": true
						}
					}
				},
				"retrieve": {
					"description": "Retrieves the store book collection with the given uuid.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						}
					}
				},
				"list": {
					"description": "Retrieves the store book collections with the given params.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						},
						"author": {
							"type": "String",
							"description": "The uuid of an author. Returns the store book collections of the author."
						}
					}
				}
			}
		},
		"StoreBookCollectionName": {
			"properties": {
				"name": {
					"type": "String",
					"description": "The name for the StoreBookCollection in the specified language",
					"required": true,
					"minLength": 2,
					"maxLength": 100
				},
				"language": {
					"type": "String",
					"required": true,
					"validator": "language_validator"
				}
			},
			"endpoints": {
				"list": {
					"description": "Retrieves all names of the store book collection.",
					"url": "store_book_collections/:uuid/names",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book collection"
						}
					}
				},
				"set": {
					"description": "Sets the name for the given store book collection in the given language.",
					"url": "store_book_collections/:uuid/names/:language",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book collection"
						},
						"language": {
							"type": "String",
							"description": "The language of the name"
						}
					}
				}
			}
		},
		"StoreBookSeries": {
			"properties": {
				"author": {
					"type": "Author"
				},
				"name": {
					"type": "String",
					"description": "The name for the store book series",
					"required": true,
					"minLength": 2,
					"maxLength": 100
				},
				"language": {
					"type": "String",
					"description": "The language of the books in the series",
					"required": true,
					"validator": "language_validator",
					"endpoints": ["create"]
				},
				"store_books": {
					"type": "StoreBook",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "Creates a new store book series.",
					"authenticated": true,
					"bodyParams": {
						"author": {
							"type": "String",
							"description": "The author of the store book series",
							"setter": "store_book_series_author_setter",
							"required": {
								"value": "user_admin_check",
								"description": "If user is admin"
							}
						},
						"store_books": {
							"type": "String[]",
							"description": "The uuids of the store books that belong to the series"
						}
					}
				},
				"retrieve": {
					"description": "Retrieves the store book series with the given uuid."
				},
				"list": {
					"description": "Retrieves the store book series with the given params.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						},
						"latest": {
							"type": "Boolean",
							"description": "If true, returns the series of the collection 'latest_series'",
							"default": false
						},
						"author": {
							"type": "String",
							"description": "The uuid of the author for which to retrieve the store book series."
						},
						"store_book": {
							"type": "String",
							"description": "The uuid of a store book. Retrieves the series to which the store book belongs to."
						}
					}
				},
				"update": {
					"description": "Updates the store book series with the given uuid and returns it.",
					"authenticated": true,
					"bodyParams": {
						"store_books": {
							"type": "String[]",
							"description": "The uuids of the store books that belong to the series"
						}
					}
				}
			}
		},
		"StoreBook": {
			"properties": {
				"collection": {
					"type": "StoreBookCollection"
				},
				"title": {
					"type": "String",
					"description": "The title of the store book",
					"required": true,
					"getter": "store_book_title_getter"
				},
				"description": {
					"type": "String",
					"description": "The description of the store book",
					"getter": "store_book_description_getter"
				},
				"language": {
					"type": "String",
					"description": "The language of the store book",
					"required": true,
					"validator": "language_validator"
				},
				"price": {
					"type": "Integer",
					"description": "The price of the store book",
					"getter": "store_book_price_getter"
				},
				"isbn": {
					"type": "String",
					"description": "The isbn of the store book",
					"getter": "store_book_isbn_getter"
				},
				"status": {
					"type": "String",
					"description": "The publication status of the store book",
					"validator": "status_validator",
					"endpoints": ["update"]
				},
				"cover": {
					"type": "StoreBookCover",
					"getter": "store_book_cover_getter"
				},
				"file": {
					"type": "StoreBookFile",
					"accessor": "store_book_file_accessor",
					"getter": "store_book_file_getter"
				},
				"in_library": {
					"type": "Boolean",
					"authenticated": true,
					"getter": "store_book_in_library_getter",
					"endpoints": []
				},
				"purchased": {
					"type": "Boolean",
					"authenticated": true,
					"getter": "store_book_purchased_getter",
					"endpoints": []
				},
				"categories": {
					"type": "Category",
					"relationship": "multiple",
					"getter": "store_book_categories_getter"
				},
				"releases": {
					"type": "StoreBookRelease",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "Creates a new store book and the first store book release.",
					"bodyParams": {
						"author": {
							"type": "String",
							"description": "The author of the store book",
							"required": {
								"value": "user_admin_and_collection_nil_check",
								"description": "If user is admin and collection = null"
							}
						},
						"collection": {
							"type": "String",
							"description": "The store book collection of the store book. If null, creates a new store book collection"
						},
						"categories": {
							"type": "String[]",
							"description": "The uuids of the categories of the store book"
						}
					}
				},
				"retrieve": {
					"description": "Retrieves the store book with the given uuid. If the user is the author or admin of the store book, the response includes the details of the last release, otherwise it includes the details of the last published release.",
					"authenticated": {
						"value": "store_book_not_published_check",
						"description": "Only if the store book is not published"
					}
				},
				"list": {
					"description": "Retrieves the store books with the given params. The response includes the details of the last published release of each store book.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of languages for which store books should be filtered, separated by comma. Is only used with latest, author or series params.",
							"default": "en"
						},
						"latest": {
							"type": "Boolean",
							"description": "If true, returns the store books of the collection 'latest_books'",
							"default": false
						},
						"review": {
							"type": "Boolean",
							"description": "If true, returns all store books in review",
							"default": false
						},
						"author": {
							"type": "String",
							"description": "The author of which to retrieve store books"
						},
						"collection": {
							"type": "String",
							"description": "The store book collection of which to retrieve store books"
						},
						"series": {
							"type": "String",
							"description": "The store book series of which to retrieve store books. If the user is not the author or an admin, is only successful with all store books published."
						},
						"categories": {
							"type": "String",
							"description": "The keys of the categories for which to retrieve store books, separated by comma."
						}
					},
					"authenticated": {
						"value": "list_store_books_authenticated_check",
						"description": "Required only with collection or review param"
					}
				},
				"update": {
					"description": "Updates the store book with the given uuid and returns it with the details of the last release.",
					"bodyParams": {
						"categories": {
							"type": "String[]",
							"description": "The uuids of the categories of the store book"
						}
					}
				}
			}
		},
		"StoreBookCover": {
			"properties": {
				"url": {
					"type": "String",
					"getter": "url_getter"
				},
				"aspect_ratio": {
					"type": "String"
				},
				"blurhash": {
					"type": "String"
				}
			},
			"endpoints": {
				"retrieve": {
					"description": "Retrieves the store book cover metadata.",
					"url": "store_books/:uuid/cover",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book"
						}
					}
				},
				"upload": {
					"description": "Uploads a store book cover for the given store book and updates the last unpublished release or creates a new release.",
					"url": "store_books/:uuid/cover",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book"
						}
					},
					"authenticated": true,
					"contentTypes": ["image/png", "image/jpeg"]
				}
			}
		},
		"StoreBookFile": {
			"properties": {
				"file_name": {
					"type": "String"
				}
			},
			"endpoints": {
				"retrieve": {
					"description": "Retrieves the store book file metadata.",
					"url": "store_books/:uuid/file",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book"
						}
					},
					"authenticated": true
				},
				"upload": {
					"description": "Uploads a store book file for the given store book and updates the last unpublished release or creates a new release.",
					"url": "store_books/:uuid/file",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the store book"
						}
					},
					"authenticated": true,
					"contentTypes": ["application/epub+zip", "application/pdf"]
				}
			}
		},
		"StoreBookRelease": {
			"properties": {
				"store_book": {
					"type": "StoreBook"
				},
				"release_name": {
					"type": "String",
					"description": "The name of the release",
					"required": true
				},
				"release_notes": {
					"type": "String",
					"description": "Optional description of changes in this release"
				},
				"published_at": {
					"type": "Integer",
					"endpoints": []
				},
				"title": {
					"type": "String",
					"minLength": 2,
					"maxLength": 100,
					"endpoints": []
				},
				"description": {
					"type": "String",
					"maxLength": 5700,
					"endpoints": []
				},
				"price": {
					"type": "Integer",
					"endpoints": []
				},
				"isbn": {
					"type": "String",
					"validator": "isbn_validator",
					"endpoints": []
				},
				"status": {
					"type": "String",
					"endpoints": []
				},
				"cover": {
					"type": "StoreBookCover"
				},
				"file": {
					"type": "StoreBookFile"
				},
				"categories": {
					"type": "Category",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"retrieve": {
					"description": "Retrieves the store book release with the given uuid.",
					"authenticated": true
				},
				"publish": {
					"description": "Publishes the store book release with the given uuid.",
					"method": "POST",
					"url": "store_book_releases/:uuid/publish"
				}
			}
		},
		"Category": {
			"properties": {
				"key": {
					"type": "String",
					"description": "The key of the category",
					"required": true
				},
				"name": {
					"type": "CategoryName",
					"description": "The name for the category in the given language",
					"getter": "category_name_getter"
				},
				"names": {
					"type": "CategoryName",
					"relationship": "multiple"
				}
			},
			"endpoints": {
				"create": {
					"description": "Creates a new category.",
					"bodyParams": {
						"name": {
							"type": "String",
							"description": "The name for the category in the given language",
							"required": true
						},
						"language": {
							"type": "String",
							"description": "The language of the given name",
							"required": true
						}
					},
					"authenticated": true
				},
				"list": {
					"description": "Retrieves all categories.",
					"queryParams": {
						"languages": {
							"type": "String",
							"description": "List of preferred languages for localized fields, separated by comma",
							"default": "en"
						}
					}
				}
			}
		},
		"CategoryName": {
			"properties": {
				"name": {
					"type": "String",
					"description": "The name for the category in the given language",
					"required": true,
					"minLength": 2,
					"maxLength": 100
				},
				"language": {
					"type": "String",
					"required": true,
					"validator": "language_validator"
				}
			},
			"endpoints": {
				"list": {
					"description": "Retrieves all names of the category.",
					"url": "categories/:uuid/names",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the category"
						}
					}
				},
				"set": {
					"description": "Sets the name for the given category in the given language.",
					"url": "categories/:uuid/names/:language",
					"urlParams": {
						"uuid": {
							"type": "String",
							"description": "The uuid of the category"
						},
						"language": {
							"type": "String",
							"description": "The language of the name"
						}
					}
				}
			}
		},
		"Book": {
			"properties": {
				"store_book": {
					"type": "StoreBook"
				},
				"file": {
					"type": "StoreBookFile"
				}
			},
			"endpoints": {
				"create": {
					"description": "Creates a new book from the given store book.\nThe user must be either on dav Pro or have the store book purchased.",
					"bodyParams": {
						"store_book": {
							"type": "String",
							"description": "The uuid of the store book from which the book should be created.",
							"required": true
						}
					}
				}
			}
		}
	}
}
