(# Get the params)
(var uuid (get_param "uuid"))
(var fields_str (get_param "fields"))
(var languages (get_param "languages"))

(if (is_nil fields_str) (
	(var fields (list "collections.uuid"))
) elseif (fields_str == "*") (
	(var fields (list "collections.uuid" "collections.name"))
) else (
	(# Process the fields string)
	(var fields (func process_fields (fields_str)))
))

(var language_list (func process_languages (languages)))

(# Get the author)
(var author (func get_table_object (uuid (get_env "AUTHOR_TABLE_ID"))))

(if (is_nil author) (
	(# Author does not exist)
	(func render_validation_errors ((list (hash (error (get_error 3503)) (status 404)))))
))

(# Get the collections of the author)
(var collections (list))
(var collections_string author.properties.collections)

(for collection_uuid in (collections_string.split ",") (
	(# Get the collection)
	(var collection (func get_table_object (collection_uuid (get_env "STORE_BOOK_COLLECTION_TABLE_ID"))))
	(if (is_nil collection) (continue))

	(# Add the collection to the list)
	(var collection_hash (hash))

	(if (fields.contains "collections.uuid") (var collection_hash.uuid collection.uuid))

	(if (
		(fields.contains "collections.name")
		or (fields.contains "collections.name.value")
		or (fields.contains "collections.name.language")
	) (
		(var collection_hash.name (
			(func find_collection_name_by_languages (
				collection.properties.names
				language_list
				((fields.contains "collections.name") or (fields.contains "collections.name.value"))
				((fields.contains "collections.name") or (fields.contains "collections.name.language"))
			))
		))
	))

	(collections.push collection_hash)
))

(# Render the result)
(render_json (hash
	(collections collections)
) 200)