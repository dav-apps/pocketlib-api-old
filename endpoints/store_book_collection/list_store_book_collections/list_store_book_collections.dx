(# Get the params)
(var fields_str (get_param "fields"))
(var languages (get_param "languages"))
(var author_uuid (get_param "author"))

(if (is_nil fields_str) (
	(var fields (list "type" "items.uuid"))
) elseif (fields_str == "*") (
	(var fields (list "type" "items.uuid" "items.author" "items.name"))
) else (
	(# Process the fields string)
	(var fields (func process_fields (fields_str)))
))

(var language_list (func process_languages (languages)))

(if (!(is_nil author_uuid)) (
	(# Get the author)
	(var author (func get_table_object (author_uuid (get_env "AUTHOR_TABLE_ID"))))

	(if (is_nil author) (
		(# Author does not exist)
		(func render_validation_errors ((list (hash (error (get_error 3503)) (status 404)))))
	))

	(if (is_nil author.properties.collections) (
		(var collection_uuids (list))
	) else (
		(var collection_uuids (author.properties.collections.split ","))
	))
) else (
	(var collection_uuids (list))
))

(# Get the collections of the author)
(var collections (list))

(for collection_uuid in collection_uuids (
	(# Get the collection)
	(var collection (func get_table_object (collection_uuid (get_env "STORE_BOOK_COLLECTION_TABLE_ID"))))
	(if (is_nil collection) (continue))

	(# Add the collection to the list)
	(var collection_hash (hash))

	(if (fields.contains "items.uuid") (var collection_hash.uuid collection.uuid))
	(if (fields.contains "items.author") (var collection_hash.author collection.properties.author))

	(if (
		(fields.contains "items.name")
		or (fields.contains "items.name.value")
		or (fields.contains "items.name.language")
	) (
		(var collection_hash.name (
			(func find_collection_name_by_languages (
				collection.properties.names
				language_list
				((fields.contains "items.name") or (fields.contains "items.name.value"))
				((fields.contains "items.name") or (fields.contains "items.name.language"))
			))
		))
	))

	(collections.push collection_hash)
))

(# Render the result)
(var result (hash))

(if (fields.contains "type") (var result.type "store_book_collection"))
(var result.items collections)

(render_json result 200)