(# Get the params)
(var uuid (get_param "uuid"))
(var fields_str (get_param "fields"))

(if (is_nil fields_str) (
	(var fields (list "type" "items.uuid"))
) elseif (fields_str == "*") (
	(var fields (list "type" "items.uuid" "items.bio" "items.language"))
) else (
	(# Process the fields string)
	(var fields (func process_fields (fields_str)))
))

(if (uuid == "mine") (
	(# Get the access token)
	(var access_token (get_header "Authorization"))
	(func render_validation_errors ((list
		(func validate_auth_header_presence (access_token))
	)))

	(# Get the session)
	(var session (func get_session (access_token)))

	(# Check if the user is an admin)
	(var admins (get_env "ADMINS"))
	(if (admins.contains session.user_id) (
		(# User is an admin)
		(func render_validation_errors ((list (hash (error (get_error 3013)) (status 400)))))
	))

	(# Get the author of the user)
	(var author_objects (func get_author_table_objects (session.user_id)))
	(if (author_objects.length == 0) (
		(# User is not an author)
		(func render_validation_errors ((list (hash (error (get_error 3000)) (status 400)))))
	))

	(var author author_objects#0)
) else (
	(# Get the author)
	(var author (func get_table_object (uuid (get_env "AUTHOR_TABLE_ID"))))

	(if (is_nil author) (
		(# Author does not exist)
		(func render_validation_errors ((list (hash (error (get_error 3503)) (status 404)))))
	))
))

(# Get the bios of the author)
(var bios (list))

(if (!(is_nil author.properties.bios)) (
	(# Get each bio)
	(var bio_uuids (author.properties.bios.split ","))

	(for bio_uuid in bio_uuids (
		(var bio (func get_table_object (bio_uuid (get_env "AUTHOR_BIO_TABLE_ID"))))
		(if (is_nil bio) (continue))

		(# Add the bio to the list)
		(var bio_hash (hash))

		(if (fields.contains "items.uuid") (var bio_hash.uuid bio.uuid))
		(if (fields.contains "items.bio") (var bio_hash.bio bio.properties.bio))
		(if (fields.contains "items.language") (var bio_hash.language bio.properties.language))

		(bios.push bio_hash)
	))
))

(# Render the result)
(var result (hash))

(if (fields.contains "type") (var result.type "author_bio"))
(var result.items bios)

(render_json result 200)