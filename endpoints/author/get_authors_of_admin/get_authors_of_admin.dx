(# Get the params)
(var fields_str (get_param "fields"))

(if (is_nil fields_str) (
	(var fields (list "authors.uuid"))
) elseif (fields_str == "*") (
	(var fields (list "authors.uuid" "authors.first_name" "authors.last_name" "authors.website_url" "authors.facebook_username" "authors.instagram_username" "authors.twitter_username" "authors.bios" "authors.collections" "authors.series" "authors.profile_image" "authors.profile_image_blurhash"))
) else (
	(# Process the fields string)
	(var fields (func process_fields (fields_str)))
))

(# Get the access token)
(var access_token (get_header "Authorization"))
(func render_validation_errors ((list
	(func validate_auth_header_presence (access_token))
)))

(# Get the session)
(var session (func get_session (access_token)))

(# Check if the user is an admin)
(var admins (get_env "ADMINS"))
(if (!(admins.contains session.user_id)) (
	(# User is not an admin)
	(func render_validation_errors ((list (hash (error (get_error 3014)) (status 400)))))
))

(# Get the authors of the user)
(var author_objects (func get_author_table_objects (session.user_id)))
(var authors (list))

(for author in author_objects (
	(if (fields.contains "authors.bios") (
		(# Get the bios of the author)
		(var bios (func get_author_bios_by_string (author.properties.bios false)))
	))

	(if (fields.contains "authors.collections") (
		(# Get the collections of the author)
		(var collections (func get_collections_by_string (author.properties.collections)))
	))

	(if (fields.contains "authors.series") (
		(# Get the series of the author)
		(var series (func get_series_by_string (author.properties.series)))
	))

	(var author_hash (hash))

	(if (fields.contains "authors.uuid") (var author_hash.uuid author.uuid))
	(if (fields.contains "authors.first_name") (var author_hash.first_name author.properties.first_name))
	(if (fields.contains "authors.last_name") (var author_hash.last_name author.properties.last_name))
	(if (fields.contains "authors.website_url") (var author_hash.website_url author.properties.website_url))
	(if (fields.contains "authors.facebook_username") (var author_hash.facebook_username author.properties.facebook_username))
	(if (fields.contains "authors.instagram_username") (var author_hash.instagram_username author.properties.instagram_username))
	(if (fields.contains "authors.twitter_username") (var author_hash.twitter_username author.properties.twitter_username))
	(if (fields.contains "authors.bios") (var author_hash.bios bios))
	(if (fields.contains "authors.collections") (var author_hash.collections collections))
	(if (fields.contains "authors.series") (var author_hash.series series))
	(if (fields.contains "authors.profile_image_blurhash") (var author_hash.profile_image_blurhash author.properties.profile_image_blurhash))
	(if (fields.contains "authors.profile_image") (var author_hash.profile_image (!(is_nil author.properties.profile_image))))

	(authors.push author_hash)
))

(# Render the result)
(render_json (hash (authors authors)) 200)